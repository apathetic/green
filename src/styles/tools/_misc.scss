/**

  Global tooling (sass functions and mixins) to
  allow easy access and application of CSS tokens

       ◡◠ ✥ ◠◡

  Table of Contents:

    • General
    • Border
    • Spacing
    • Z-index
    • Input
    • Elevation
    • Misc

*/

/* ---------------------------------------
  General
---------------------------------------- */

@function get($map, $keys...) {
  @each $key in $keys {
    @if not map-has-key($map, $key) {
      @warn '`#{$key}` not found in `#{$map}`.';
    }
    $map: map-get($map, $key);
  }

  @return $map;
}

/* ---------------------------------------
  Border
---------------------------------------- */

@function border($key, $color: get($shades, 'grey')) {
  @if not map-has-key($borders, $key) {
    @warn 'No border found for `#{$key}`.';

    @return map-get($borders, 'thin') solid $color;
  }

  @return map-get($borders, $key) solid $color;
}


/* ---------------------------------------
  Spacing
---------------------------------------- */

@function space($key) {
  @if not map-has-key($spacers, $key) {
    @warn 'No spacer found for `#{$key}`.';

    @return map-get($spacers, 3);
  }

  @return map-get($spacers, $key);
}


/* ---------------------------------------
  Z-index
---------------------------------------- */

@function z-index($key) {
  @if not map-has-key($z-index, $key) {
    @warn 'No z-index found for `#{$key}`.';

    @return map-get($z-index, 'base');
  }

  @return map-get($z-index, $key);
}


/* ---------------------------------------
  Input
---------------------------------------- */

@function input($key) {
  @if not map-has-key($inputs, $key) {
    @warn 'No input key found for `#{$key}`.';

    @return map-get($inputs, 'height');
  }

  @return map-get($inputs, $key);
}

@mixin input-disabled {
  background-color: colors('shades', 'light-grey') !important;
  border-color: colors('text', 'disabled') !important;
  color: colors('text', 'medium') !important;
  pointer-events: none;

  &:active,
  &:focus {
    box-shadow: none !important;
  }
}


/* ---------------------------------------
  Elevation
---------------------------------------- */

@mixin elevation($z) {
  box-shadow:
    nth($shadow-key-umbra, $z),
    nth($shadow-key-penumbra, $z),
    nth($shadow-key-ambient, $z);
}


/* ---------------------------------------
  Misc
---------------------------------------- */

@mixin corner {
  background: colors('shades', 'white');
  border-radius: 2px 0;
  height: 12px;
  position: absolute;
  top: -6px;
  transform: rotate(45deg);
  width: 12px;
  z-index: z-index('behind');
}

@mixin screenreader-only {
  border: 0;
  clip: rect(0, 0, 0, 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
}
